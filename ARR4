using System;

namespace Arr4
{
    class Program
    {
        static void Main()
        {
            var array1 = new[] { 1, 2, 3, 4, 6, 7 };
            var array2 = new[] { 3, 4, 7, 9, 11 };
            var uniArray = United(array1, array2);
            var interArray = Intersection(array1, array2);
            var diffArray = Difference(uniArray, interArray);
            Out(uniArray);
            Out(interArray);
            Out(diffArray);
            Console.ReadKey();
        }

        public static int[] United(int[] array1, int[] array2)
        {
            var uniArray = new int[array1.Length + array2.Length];
            int min = Min(array1, array2);
            uniArray[0] = min;
            int max = Max(array1, array2);
            int k = 1;
            for (int i = 1; i <= max - min; i++)
            {
                if (HaveThis(array1, min + i))
                {
                    uniArray[k] = min + i;
                    k++;
                }
                else if (HaveThis(array2, min + i))
                {
                    uniArray[k] = min + i;
                    k++;
                }
            }
            return DeleteEnd(uniArray);
        }

        public static int[] Intersection(int[] array1, int[] array2)
        {
            var interArray = new int[array1.Length];
            int k = 0;
            for (int i = 0; i < interArray.Length; i++)
            {
                if (HaveThis(array2, array1[i]))
                {
                    interArray[k] = array1[i];
                    k++;
                }
            }
            return DeleteEnd(interArray);
        }

        public static int[] Difference(int[] uniArray, int[] interArray)
        {
            var diffArray = new int[uniArray.Length];
            int k = 0, z = 0;
            for (int i = 0; i < diffArray.Length; i++)
            {
                for (int j = 0; j < interArray.Length; j++)
                    if (uniArray[i] == interArray[j])
                        break;
                    else z++;
                if (z == 3)
                {
                    diffArray[k] = uniArray[i];
                    k++;
                }
                z = 0;
            }
            return DeleteEnd(diffArray);
        }

        public static int Min(int[] array1, int[] array2)
        {
            if (array1[0] < array2[0])
                return array1[0];
            else return array2[0];
        }

        public static int Max(int[] array1, int[] array2)
        {
            if (array1[array1.Length - 1] > array2[array2.Length - 1])
                return array1[array1.Length - 1];
            else return array2[array2.Length - 1];
        }

        public static bool HaveThis(int[] array, int a)
        {
            foreach (var e in array)
                if (e == a)
                    return true;
            return false;
        }

        public static int[] DeleteEnd(int[] array)
        {
            int k = 1;
            for (int i = 1; i < array.Length; i++)
                if (array[i] != 0) k++;
            var finalArray = new int[k];
            for (int j = 0; j < finalArray.Length; j++)
                finalArray[j] = array[j];
            return finalArray;
        }

        public static void Out(int[] array)
        {
            foreach (var e in array)
                Console.Write("{0} ", e);
            Console.WriteLine();
        }
    }
}
